{# variables #}
{% set pagename = 'segment' %}
{% set reg_M = r/^M\-(\d*|.*)$/ %}

{# template & code #}
{% extends 'parts/layout.njk' %}
{% import 'code/markup.njk' as markup with context %}
{% import 'code/scss/style.njk' as style with context %}

{# macros #}
{% macro outputString(str) %}
  {{ 
    str 
    | nl2br
    | replace('`-', '<code class="language-html">') 
    | replace('-`', '</code>') 
    | urlize
    | safe 
  }}
{% endmacro %}

{# main block #}
{% block main %}
{% for name, content in segment %}
{% set class = name | replace(' ', '-') %}
<section class="segment">
  <h2 class="segment__title" id="{{ class }}">{{ name | title }}</h2>
  <p class="segment__des">{{ outputString(content.description) }}</p>

  {# preview #}
  {% if content.preview %}
  <article class="{{ 'full-width' if content.full else 'fixed-width' }}">
    <section class="segment__code">
      <pre><code class="language-markup" id="{{ class + '__markup' }}">
        {%- filter trim %} {{ markup.get(class) }} {% endfilter -%}
      </code></pre>
      <pre><code class="language-scss" id="{{ class + '__scss' }}">
        {%- filter trim %} {{ style.get(class) }} {% endfilter -%}
      </code></pre>
    </section>
    <section class="segment__result">
      {{ markup.get(class) }}
    </section>
  </article>
  {% endif %}

  {# methods #}
  {% for method_name, method_content in content.methods %}
    {% set methodclass = class + '_' + method_name %}
    <article class="{{ 'full-width' if method_content.full else 'fixed-width' }}">
      <h3>Method: {{ method_name }}</h3>
      <p class="cap">{{ method_content.cap }}</p>
      <section class="segment__code">
        <pre><code class="language-markup" id="{{ methodclass + '_markup' }}">
          {%- filter trim %} {{ markup.get(methodclass) }} {% endfilter -%}
        </code></pre>
        <pre><code class="language-scss" id="{{ methodclass + '__scss' }}">
          {%- filter trim %} {{ style.get(methodclass) }} {% endfilter -%}
        </code></pre>
      </section>
      <section class="segment__result">
        {{ markup.get(methodclass) }}
      </section>
    </article>
  {% endfor %}
</section>
{% endfor %}

{% endblock %}